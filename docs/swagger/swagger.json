{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "A custom blog API built on golang.",
    "title": "Hastings Blog",
    "contact": {
      "name": "Thomas Hastings",
      "url": "https://www.thomashastings.com",
      "email": "thomas@thomashastings.com"
    },
    "license": {
      "name": "MIT",
      "url": "http://opensource.org/licenses/MIT"
    },
    "version": "0.0.1"
  },
  "host": "localhost",
  "basePath": "/",
  "paths": {
    "/admin/post/create": {
      "post": {
        "description": "Create new post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "posts",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "description": "tags to filter by",
            "name": "tags",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "maximum number of results to return",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "pet response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/pet"
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/errorModel"
            }
          }
        }
      }
    },
    "/admin/user/create": {
      "post": {
        "security": [
          {
            "api_key": []
          },
          {
            "oauth": [
              "read",
              "write"
            ]
          }
        ],
        "description": "This will allow the user to create a new account",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "summary": "Allow a registered user to create an account",
        "operationId": "users",
        "responses": {
          "200": {
            "$ref": "#/responses/someResponse"
          },
          "422": {
            "$ref": "#/responses/validationError"
          },
          "default": {
            "$ref": "#/responses/genericError"
          }
        }
      }
    },
    "/admin/user/delete/{user}": {
      "post": {
        "security": [
          {
            "api_key": []
          },
          {
            "oauth": [
              "read",
              "write"
            ]
          }
        ],
        "description": "This will allow the user to delete an exisiting user",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "summary": "Delete an exisiting user.",
        "operationId": "users",
        "responses": {
          "200": {
            "$ref": "#/responses/someResponse"
          },
          "422": {
            "$ref": "#/responses/validationError"
          },
          "default": {
            "$ref": "#/responses/genericError"
          }
        }
      }
    },
    "/admin/user/update": {
      "post": {
        "security": [
          {
            "api_key": []
          },
          {
            "oauth": [
              "read",
              "write"
            ]
          }
        ],
        "description": "This will allow the user to update an exisiting user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "summary": "Update an exisiting user",
        "operationId": "users",
        "responses": {
          "200": {
            "$ref": "#/responses/someResponse"
          },
          "422": {
            "$ref": "#/responses/validationError"
          },
          "default": {
            "$ref": "#/responses/genericError"
          }
        }
      }
    },
    "/admin/user/{user}": {
      "get": {
        "security": [
          {
            "api_key": []
          },
          {
            "oauth": [
              "read",
              "write"
            ]
          }
        ],
        "description": "This will allow the user to view a specific user record",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "summary": "Show a specific users",
        "operationId": "users",
        "responses": {
          "200": {
            "$ref": "#/responses/someResponse"
          },
          "422": {
            "$ref": "#/responses/validationError"
          },
          "default": {
            "$ref": "#/responses/genericError"
          }
        }
      }
    },
    "/admin/users": {
      "get": {
        "security": [
          {
            "api_key": []
          },
          {
            "oauth": [
              "read",
              "write"
            ]
          }
        ],
        "description": "This will allow the user to see all registered users.",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "summary": "See all registered users.",
        "operationId": "users",
        "responses": {
          "200": {
            "$ref": "#/responses/someResponse"
          },
          "422": {
            "$ref": "#/responses/validationError"
          },
          "default": {
            "$ref": "#/responses/genericError"
          }
        }
      }
    },
    "/auth": {
      "post": {
        "description": "This will allow a user to authenticate with the system and get a JWT.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "summary": "Authenticate a user with username and password.",
        "operationId": "users",
        "responses": {
          "200": {
            "$ref": "#/responses/someResponse"
          },
          "422": {
            "$ref": "#/responses/validationError"
          },
          "default": {
            "$ref": "#/responses/genericError"
          }
        }
      }
    },
    "/post/create": {
      "post": {
        "security": [
          {
            "api_key": []
          },
          {
            "oauth": [
              "read",
              "write"
            ]
          }
        ],
        "description": "This will allow the user to create a new post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "summary": "Create a new post",
        "operationId": "posts",
        "responses": {
          "200": {
            "$ref": "#/responses/someResponse"
          },
          "422": {
            "$ref": "#/responses/validationError"
          },
          "default": {
            "$ref": "#/responses/genericError"
          }
        }
      }
    },
    "/post/delete/{post}": {
      "post": {
        "security": [
          {
            "api_key": []
          },
          {
            "oauth": [
              "read",
              "write"
            ]
          }
        ],
        "description": "This will allow the user to delete an exisiting post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "summary": "Delete an exisiting post.",
        "operationId": "posts",
        "responses": {
          "200": {
            "$ref": "#/responses/someResponse"
          },
          "422": {
            "$ref": "#/responses/validationError"
          },
          "default": {
            "$ref": "#/responses/genericError"
          }
        }
      }
    },
    "/post/update/{post}": {
      "post": {
        "security": [
          {
            "api_key": []
          },
          {
            "oauth": [
              "read",
              "write"
            ]
          }
        ],
        "description": "This will allow the user to Update an exisiting post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "summary": "Update an exisiting post.",
        "operationId": "posts",
        "responses": {
          "200": {
            "$ref": "#/responses/someResponse"
          },
          "422": {
            "$ref": "#/responses/validationError"
          },
          "default": {
            "$ref": "#/responses/genericError"
          }
        }
      }
    },
    "/post/{post}": {
      "get": {
        "description": "Lists posts sorted by more recent post first",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "operationId": "posts",
        "responses": {
          "200": {
            "$ref": "#/responses/someResponse"
          },
          "422": {
            "$ref": "#/responses/validationError"
          },
          "default": {
            "$ref": "#/responses/genericError"
          }
        }
      }
    },
    "/posts": {
      "get": {
        "description": "This will show all available posts by default.",
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http",
          "https"
        ],
        "summary": "Lists posts sorted by more recent post first",
        "operationId": "posts",
        "responses": {
          "200": {
            "$ref": "#/responses/someResponse"
          },
          "422": {
            "$ref": "#/responses/validationError"
          },
          "default": {
            "$ref": "#/responses/genericError"
          }
        }
      }
    }
  }
}